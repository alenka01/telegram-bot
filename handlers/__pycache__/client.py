from aiogram.dispatcher import FSMContext
from aiogram import types, Dispatcher
from create_bot import dp, bot
from keyboards import ini_client, ini_year, ini_client_url, ini_yearclient_url
from database import zodiacDB
from aiogram.dispatcher.filters import Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.dispatcher.filters.state import State,StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import requests
from bs4 import BeautifulSoup

async def message_start(message : types.Message):
    try:
        await message.answer('<b>–ü—Ä–∏–≤–µ—Ç!</b>‚úã\n –Ø <i>Telegram-–±–æ—Ç</i>üëæ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–≤–æ–µ–≥–æ <i>—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è</i>)\n–£ –º–µ–Ω—è —Ç—ã —Å–º–æ–∂–µ—à—å:\n<b>*</b>–ù–∞–π—Ç–∏ –∫—Ä–∞—Ç–∫–æ–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ</b> –≤—Å–µ—Ö <b>–∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞</b>‚úÖ\n<b>*</b>–ü–æ—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ—é <b>–Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É</b><s>(—á—Ç–æ —ç—Ç–æ –∏ –∑–∞—á–µ–º –µ—Å—Ç—å –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)</s>‚úÖ\n<b>*</b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π <b>–≥–æ—Ä–æ—Å–∫–æ–ø</b>‚úÖ\n<b>*</b>–£–∑–Ω–∞—Ç—å —Å–≤–æ–µ <b>–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–Ω—è!</b>‚úÖ\n\n<b>–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞–∂–º–∏ –Ω–∞</b> /helpüí°\n–î–ª—è –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥ –Ω–∞–∂–º–∏ –Ω–∞ <b><i>–º–µ–Ω—é</i></b>üëá')
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É:\nhttps://t.me/ForYourZodiacbot')
    finally:
        return
 
# @dp.message_handler(commands=['help'])
async def commands_start(message : types.Message):
    try:
        await bot.send_message(message.from_user.id, '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>‚úã\n\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ <i>YourZodiac</i>-bot –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å:\n\n/reg - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —Ç–∞–∫ –º—ã –±—É–¥–µ–º –ª—É—á—à–µ –∑–Ω–∞—Ç—å –æ –Ω–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\n\n/drop - –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\
                               \n\n/zodiac - –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞\n\n/china_zodiac - –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞\n\n/horoscope - –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞\n\n/year_horoscope - –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å –¥–ª—è –∫–∏—Ç–∞–π—Å–∫–∏—Ö –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞\
                               \n\n/karta - –ü–æ—Å—á–∏—Ç–∞—Ç—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É*.\n\n<b>*</b>\n<b>–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞?</b>–ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞(–µ–µ —Ç–∞–∫–∂–µ –Ω–∞–∑—ã–≤–∞—é—Ç –∫–æ—Å–º–æ–≥—Ä–∞–º–º–∞ –∏–ª–∏ –ª–∏—á–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø —Ä–æ–∂–¥–µ–Ω–∏—è) - —ç—Ç–æ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ –¥–∏–∞–≥—Ä–∞–º–º–∞, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Å —É—á–µ—Ç–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–µ–±–µ—Å–Ω—ã—Ö —Ç–µ–ª –≤ –º–æ–º–µ–Ω—Ç –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è. –° –ø–æ–º–æ—â—å—é –Ω–µ—ë –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ –µ—â—ë –∑–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞ –≤–ª–∏—è—é—Ç –Ω–∞ –∂–∏–∑–Ω—å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä.\n\n/prediction - –Ø —Ç–µ–±–µ —Å–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å\n\n/review - –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç\n\n‚ùó–ï—Å–ª–∏ —Ç—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª <i>–æ—Ç–∑—ã–≤</i>, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>/update</b> –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–Ω–∞–≤–æ –ø—Ä–æ–≥–æ–ª–æ—Å—É–π')
        await message.delete()
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É:\nhttps://t.me/ForYourZodiacbot')
    finally:
        return
    
@dp.callback_query_handler(lambda x: x.data and x.data.startswith('del '))
async def push_inline(callback_query : types.CallbackQuery):
     read= await zodiacDB.sql_read(callback_query.data.replace('del ',''))
     for ink in read:
          await callback_query.message.answer(f'<b><i>{ink[1]}</i></b>\n<b>–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞</b>: {ink[2]}\n<b>–ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞:</b> {ink[3]}\n<b>–û–ø–∏—Å–∞–Ω–∏–µ</b>\n {ink[4]}')
     await callback_query.message.answer(f'<b>–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ?</b>\n–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –ø–æ <b><a href="https://www.infoorel.ru/public/public_echo.php?id=1119">c—Å—ã–ª–∫–µ</a></b>', disable_web_page_preview=True)
     await callback_query.message.answer(f'<i>–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?</i>üòä\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤–ø–∏—à–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –≤–∞–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å—Ç—Ä–æ–∫—É\n\n<b>–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—éüëá</b>', disable_web_page_preview=True)
     await callback_query.answer()
     await bot.edit_message_reply_markup(
        chat_id=callback_query.from_user.id,
        message_id=callback_query.message.message_id, 
        reply_markup=None
    )
     await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)

@dp.callback_query_handler(lambda x: x.data and x.data.startswith('pop '))
async def push_year_inline(callback_query : types.CallbackQuery):
     read= await zodiacDB.sql_year_read(callback_query.data.replace('pop ',''))
     for ink in read:
          await callback_query.message.answer(f'<b><i>{ink[1]}</i></b>\n<b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {ink[2]}')
     await callback_query.message.answer(f'<i>–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?üòä</i>\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –º–µ–Ω—éüëá\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°', disable_web_page_preview=True)
     await callback_query.answer()
     await bot.edit_message_reply_markup(
        chat_id=callback_query.from_user.id,
        message_id=callback_query.message.message_id, 
        reply_markup=None
    )
     await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)

# @dp.message_handler(commands=['–ö–∏—Ç–∞–π—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø'])
async def commands_push_year_DB(message : types.Message): 
     await bot.send_message(message.from_user.id,f'<b>–ù–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ–π –∫–∏—Ç–∞–π—Å–∫–∏–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞?</b>üôä\n–ü–µ—Ä–µ—Ö–æ–¥–∏ –±—ã—Å—Ç—Ä–µ–π –ø–æ <b><a href="https://thegirl.ru/articles/pravilnyi-kitaiskii-goroskop-u-tebya-na-samom-dele-chetyre-zhivotnykh-pokrovitelya/">c—Å—ã–ª–∫–µ</a></b> –∏ —á–∏—Ç–∞–π —Å—Ç–∞—Ç—å—é –æ–± —ç—Ç–æ–º', disable_web_page_preview=True)
     await bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:',reply_markup=ini_year) 
     await message.delete()       

# @dp.message_handler(commands=['–ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞'])
async def commands_push_DB(message : types.Message): 
     await bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:',reply_markup=ini_client) 
     await message.delete()    

   
# –ö—Å—é—à–∏–Ω –∫–æ–¥
class user_reg (StatesGroup):
    name = State()
    birthday = State()
    feedback = State()

@dp.message_handler(state=user_reg.name)
async def add_name_(message:types.Message, state = FSMContext):
    chat_id = message.from_user.id
    await state.finish()
    zodiacDB.add_user_name(message)
    await bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ <i>–î–î/–ú–ú/–ì–ì–ì–ì</i>")
    await user_reg.birthday.set()

@dp.message_handler(state=user_reg.birthday)
async def add_birthday_(message:types.Message, state=FSMContext):
    chat_id=message.chat.id
    await state.finish()
    zodiacDB.add_user_birthday(message)
    await bot.send_message(chat_id,"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞üòä\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –º–µ–Ω—éüëá\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°")

# @dp.message_handler(commands=['drop'])
async def drop_message(message:types.Message, state=FSMContext):
    chat_id=message.from_user.id
    zodiacDB.drop_user_reg(chat_id)
    await bot.send_message(chat_id,"<b>–ó–∞–ø–∏—Å—å –æ –≤–∞—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!</b>\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ <b>/reg</b>\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –º–µ–Ω—éüëá\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°")

# @dp.message_handler(commands=['update'])
async def drop_review(message:types.Message, state=FSMContext):
    chat_id=message.from_user.id
    zodiacDB.update_user_review(chat_id)
    await bot.send_message(chat_id,"<b>–í–∞—à –≥–æ–ª–æ—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</b>\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ <b>/review</b>\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –º–µ–Ω—éüëá\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°")

# @dp.message_handler(commands=['reg'])
async def start_message(message:types.Message, state=FSMContext):
    chat_id = message.chat.id
    user_status = zodiacDB.add_user(message)
    if user_status == False:
        user_name = zodiacDB.get_user_name(chat_id)
        user_birthday = zodiacDB.get_user_birthday(chat_id)
        await bot.send_message(chat_id,"<i>–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</i> \n"
                                        f"–í–∞—à–µ –∏–º—è: {user_name}\n"
                                        f"–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {user_birthday}\n"
                                        f"–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>/drop</b>")
                                        
    else:
        await bot.send_message(chat_id, f"–ü—Ä–∏–≤–µ—Ç!‚úã {message.chat.first_name} !\n"
                                        f"–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è")
        await user_reg.name.set()

# @dp.message_handler(commands=['prediction'])
async def random_prediction(message:types.Message, state=FSMContext):
        chat_id=message.from_user.id
        average_message=zodiacDB.get_prediction1()+zodiacDB.get_prediction2()+zodiacDB.get_prediction3()
        await bot.send_message(chat_id,"üîÆ–í–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n"
                                        f"{average_message}")
# @dp.message_handler(commands=['nat_karta'])
async def nat_karta_com(message:types.Message):
        await bot.send_message(message.from_user.id,'‚ùó–ß—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ <b><a href="https://geocult.ru/natalnaya-karta-onlayn-raschet">c—Å—ã–ª–∫–µ</a></b> –∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ: <b>–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è</b> –∏ <b>–≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è</b>, –∞ —Ç–∞–∫–∂–µ <b>–º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è</b>\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –º–µ–Ω—éüëá\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°', disable_web_page_preview=True)
                                  
        
        
# @dp.message_handler(commands =['feedback'])
async def Text_feed(message:types.Message, state = FSMContext):
    chat_id = message.from_user.id
    user_status = zodiacDB.add_feed(message)
    if user_status == False:
        await bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤!üòä")
    else  :
        await bot.send_message(chat_id, "–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥—É–∫—Ç–µ.\n–ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        await user_reg.feedback.set()

# @dp.message_handler(state=user_reg.feedback)
async def add_feedback_(message:types.Message, state = FSMContext):
    chat_id = message.from_user.id
    await state.finish()
    zodiacDB.add_user_feedback(message)
    await bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤!")  

        
# –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ 
@dp.callback_query_handler(lambda x: x.data and x.data.startswith('url '))
async def push_year_inline(callback_query : types.CallbackQuery):
     read= await zodiacDB.sql_url_read(callback_query.data.replace('url ',''))
     headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
    }
     for line in read:
         url=f'{line[2]}'
     r = requests.get(url=url, headers=headers)
     soup = BeautifulSoup(r.text, "lxml")
     articles_cards = soup.find_all("div", class_="mainContainer")
     for article in articles_cards:
        article_title = article.find("h1").text.strip()
        article_text = article.find("p", class_="").text.strip()
        await callback_query.message.answer(f"<b>{article_title}</b>\n{article_text}")
        await callback_query.message.answer(f'<i>–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?</i>üòä\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤–ø–∏—à–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –≤–∞–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å—Ç—Ä–æ–∫—É\n\n<b>–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—éüëá</b>\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°', disable_web_page_preview=True)
        await callback_query.answer()
        await bot.edit_message_reply_markup(
        chat_id=callback_query.from_user.id,
        message_id=callback_query.message.message_id, 
        reply_markup=None
    )


@dp.message_handler(commands=['horoscope'])
async def get_first_zodiac(message : types.Message):
    await bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:', reply_markup=ini_client_url)
    

@dp.callback_query_handler(lambda x: x.data and x.data.startswith('year_url '))
async def push_year_inline(callback_query : types.CallbackQuery):
     read= await zodiacDB.sql_year_url_read(callback_query.data.replace('year_url ',''))
     headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36"
    }
     for line in read:
         url=f'{line[2]}'
     r = requests.get(url=url, headers=headers)
     soup = BeautifulSoup(r.text, "lxml")
     articles_cards = soup.find_all("div", class_="mainContainer")
     for article in articles_cards:
        article_title = article.find("h1").text.strip()
        article_text = article.find("p", class_="").text.strip()
        await callback_query.message.answer(f"<b>{article_title}</b>\n{article_text}")
        await callback_query.message.answer(f'<i>–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?</i>üòä\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤–ø–∏—à–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –≤–∞–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å—Ç—Ä–æ–∫—É\n\n<b>–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—éüëá</b>\n\n<b>–ó–∞–±—ã–ª–∏ –∫–æ–º–∞–Ω–¥—É? –ù–∞–∂–º–∏—Ç–µ /help</b>üí°', disable_web_page_preview=True)
        await callback_query.answer()
        await bot.edit_message_reply_markup(
        chat_id=callback_query.from_user.id,
        message_id=callback_query.message.message_id, 
        reply_markup=None
    )


@dp.message_handler(commands=['year_horoscope'])
async def get_first_zodiac(message : types.Message):
    await bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:', reply_markup=ini_yearclient_url)   
   

        

def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(message_start, commands=['start'])
    dp.register_message_handler(commands_start,commands=['help'])
    dp.register_message_handler(commands_push_DB, commands=['zodiac'])
    dp.register_message_handler(commands_push_year_DB, commands=['china_zodiac'])
    dp.register_message_handler(random_prediction, commands=['prediction'])
    dp.register_message_handler(start_message, commands=['reg'])
    dp.register_message_handler(drop_review, commands=['update'])
    dp.register_message_handler(drop_message, commands=['drop'])
    dp.register_message_handler(Text_feed, commands =['feedback'])
    dp.register_message_handler(add_feedback_, state=user_reg.feedback)
    dp.register_message_handler(nat_karta_com, commands=['karta'])
